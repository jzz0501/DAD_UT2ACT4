{"ast":null,"code":"var _jsxFileName = \"G:\\\\ReactProjects\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport Formulario from \"./HomeComponents/Formulario\";\nimport Navbar from \"./HomeComponents/Navbar\";\nimport Tabla from \"./HomeComponents/Table\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [list, setList] = useState([]);\n  useEffect(() => {\n    const initList = [];\n    fetch(`http://localhost:3030/data`).then(res => res.json()).then(json => json.rows.forEach(element => {\n      initList.push(element);\n    }));\n    setTimeout(() => {\n      setList(initList);\n    }, 200);\n  }, []);\n\n  //Utilizar hook useSelector para obtener datos de store (datos de estado actual)\n  const userData = useSelector(state => state.login);\n  const navigate = useNavigate();\n  const isLoggedin = userData.isAutenticated;\n  useEffect(() => {\n    if (!isLoggedin) {\n      navigate('/');\n    }\n  }, [isLoggedin, navigate]);\n  const update = () => {\n    const newList = [];\n    setTimeout(() => fetch(`http://localhost:3030/data`).then(res => res.json()).then(json => {\n      json.rows.forEach(row => {\n        newList.push(row);\n      });\n      setList(newList);\n    }), 500);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      username: userData.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formulario, {\n      event: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Tabla, {\n      list: list,\n      updateEvent: update\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"Nmc/jAL1AhyMVkp8aCnHodgyJek=\", false, function () {\n  return [useSelector, useNavigate];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","Formulario","Navbar","Tabla","useSelector","useNavigate","jsxDEV","_jsxDEV","Home","_s","list","setList","initList","fetch","then","res","json","rows","forEach","element","push","setTimeout","userData","state","login","navigate","isLoggedin","isAutenticated","update","newList","row","children","username","fileName","_jsxFileName","lineNumber","columnNumber","event","updateEvent","_c","$RefreshReg$"],"sources":["G:/ReactProjects/frontend/src/components/Home.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Formulario from \"./HomeComponents/Formulario\";\r\nimport Navbar from \"./HomeComponents/Navbar\";\r\nimport Tabla from \"./HomeComponents/Table\";\r\nimport { useSelector } from \"react-redux\"\r\nimport { useNavigate } from \"react-router-dom\"\r\n\r\n\r\nexport default function Home() {\r\n    \r\n    const [list, setList] = useState([])\r\n\r\n    useEffect(() => {\r\n        const initList = []\r\n        fetch(`http://localhost:3030/data`)\r\n            .then(res => res.json())\r\n            .then(json => json.rows.forEach(element => {\r\n                initList.push(element)\r\n            }))\r\n        setTimeout(() => {\r\n            setList(initList)\r\n        },200)\r\n    },[])\r\n\r\n    //Utilizar hook useSelector para obtener datos de store (datos de estado actual)\r\n    const userData = useSelector(state => state.login)\r\n    const navigate = useNavigate()\r\n\r\n    const isLoggedin = userData.isAutenticated\r\n    useEffect(() => {\r\n        if(!isLoggedin) {\r\n            navigate('/')\r\n        }\r\n    }, [isLoggedin, navigate])\r\n\r\n\r\n    const update = () =>  {\r\n        const newList = []\r\n        setTimeout(() =>\r\n            fetch(`http://localhost:3030/data`)\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    json.rows.forEach((row) => {\r\n                        newList.push(row)\r\n                    })\r\n                    setList(newList)\r\n                })\r\n            ,500\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navbar username={userData.username}/>\r\n            <Formulario event={update} />\r\n            <Tabla list={list} updateEvent={update}/>\r\n        </div>\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,KAAK,MAAM,wBAAwB;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG9C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMa,QAAQ,GAAG,EAAE;IACnBC,KAAK,CAAE,4BAA2B,CAAC,CAC9BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACE,IAAI,IAAIA,IAAI,CAACC,IAAI,CAACC,OAAO,CAACC,OAAO,IAAI;MACvCP,QAAQ,CAACQ,IAAI,CAACD,OAAO,CAAC;IAC1B,CAAC,CAAC,CAAC;IACPE,UAAU,CAAC,MAAM;MACbV,OAAO,CAACC,QAAQ,CAAC;IACrB,CAAC,EAAC,GAAG,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;;EAEL;EACA,MAAMU,QAAQ,GAAGlB,WAAW,CAACmB,KAAK,IAAIA,KAAK,CAACC,KAAK,CAAC;EAClD,MAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9B,MAAMqB,UAAU,GAAGJ,QAAQ,CAACK,cAAc;EAC1C5B,SAAS,CAAC,MAAM;IACZ,IAAG,CAAC2B,UAAU,EAAE;MACZD,QAAQ,CAAC,GAAG,CAAC;IACjB;EACJ,CAAC,EAAE,CAACC,UAAU,EAAED,QAAQ,CAAC,CAAC;EAG1B,MAAMG,MAAM,GAAGA,CAAA,KAAO;IAClB,MAAMC,OAAO,GAAG,EAAE;IAClBR,UAAU,CAAC,MACPR,KAAK,CAAE,4BAA2B,CAAC,CAC9BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACE,IAAI,IAAI;MACVA,IAAI,CAACC,IAAI,CAACC,OAAO,CAAEY,GAAG,IAAK;QACvBD,OAAO,CAACT,IAAI,CAACU,GAAG,CAAC;MACrB,CAAC,CAAC;MACFnB,OAAO,CAACkB,OAAO,CAAC;IACpB,CAAC,CAAC,EACL,GACL,CAAC;EACL,CAAC;EAED,oBACItB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA,CAACL,MAAM;MAAC8B,QAAQ,EAAEV,QAAQ,CAACU;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACtC7B,OAAA,CAACN,UAAU;MAACoC,KAAK,EAAET;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7B7B,OAAA,CAACJ,KAAK;MAACO,IAAI,EAAEA,IAAK;MAAC4B,WAAW,EAAEV;IAAO;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd;AAAC3B,EAAA,CAlDuBD,IAAI;EAAA,QAiBPJ,WAAW,EACXC,WAAW;AAAA;AAAAkC,EAAA,GAlBR/B,IAAI;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}