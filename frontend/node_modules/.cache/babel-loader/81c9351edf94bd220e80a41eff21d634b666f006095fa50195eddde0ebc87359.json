{"ast":null,"code":"var _jsxFileName = \"G:\\\\ReactProjects\\\\frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\n//Importar libreria de materia ui\nimport { Avatar, Box, Button, Container, Grid, Paper, TextField, Typography } from '@mui/material';\n//Importar el hook useState para que la funcion componente se puede utilizar state\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  //Inicializar el estado\n  const [text, setText] = useState({\n    username: '',\n    password: ''\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    align: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h3\",\n      component: \"h3\",\n      children: \"LogIn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      width: 400,\n      marginTop: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 4,\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            padding: 2,\n            children: [/*#__PURE__*/_jsxDEV(TextField, {\n              type: \"username\",\n              placeholder: \"username\",\n              onChange: event => setText({\n                ...text,\n                username: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              type: \"password\",\n              placeholder: \"password\",\n              style: {\n                marginTop: 10\n              },\n              onChange: event => setText({\n                ...text,\n                password: event.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              style: {\n                marginTop: 10\n              },\n              onClick: () => {\n                if (!(text.username === '' || text.password === '')) {\n                  fetch(`http://localhost:3030/login?user=${text.username}&password=${text.password}`).then(res => res.json()).then(json => {\n                    if (json.data.nombre !== undefined) {\n                      console.log(json);\n                      console.log(`nombre: ${json.data.nombre}`);\n                      console.log(`rol: ${json.data.rol}`);\n                      alert('datos obtenido esta en consola');\n                    } else {\n                      alert('usuario o password incorrecto');\n                    }\n                  });\n                } else {\n                  alert('campo vacio');\n                }\n              },\n              children: \"Acceder\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"6CAb3S0XA2ndgjsGHbgqg8jt5Yw=\");\n_c = Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["Avatar","Box","Button","Container","Grid","Paper","TextField","Typography","useState","jsxDEV","_jsxDEV","Login","_s","text","setText","username","password","align","children","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","container","width","marginTop","item","xs","elevation","padding","type","placeholder","onChange","event","target","value","style","onClick","fetch","then","res","json","data","nombre","undefined","console","log","rol","alert","_c","$RefreshReg$"],"sources":["G:/ReactProjects/frontend/src/components/Login.js"],"sourcesContent":["//Importar libreria de materia ui\r\nimport { Avatar, Box, Button, Container, Grid, Paper, TextField, Typography } from '@mui/material'\r\n//Importar el hook useState para que la funcion componente se puede utilizar state\r\nimport { useState } from 'react'\r\n\r\nexport default function Login() {\r\n\r\n    //Inicializar el estado\r\n    const [text,setText] = useState({username:'', password:''})\r\n\r\n    return (\r\n        \r\n        <Container align='center'>\r\n\r\n            <Typography variant='h3' component='h3'>LogIn</Typography>\r\n\r\n            <Grid container width={400} marginTop={2}>\r\n                <Grid item xs={12}>\r\n                    <Paper elevation={4}>\r\n                        <Avatar/>\r\n                        <Box padding={2}>\r\n                            {/* TextField para el usuario introducir nombre de login */}\r\n                            <TextField \r\n                                type='username'\r\n                                placeholder='username'\r\n                                onChange={(event) => setText({...text, username: event.target.value})}>\r\n                            </TextField>\r\n                            <br/>\r\n                            {/* TextField para el usuario introducir contrase√±a de login */}\r\n                            <TextField \r\n                                type='password'\r\n                                placeholder='password'\r\n                                style={{marginTop: 10}}\r\n                                onChange={(event) => setText({...text, password: event.target.value})}>\r\n                            </TextField>\r\n                            <br/>\r\n                            {/* Boton para que el usuario acceder al datos de cuenta (nombre y rol)*/}\r\n                            {/* Si algun campo vacio o no se encuentra esta cuenta (devuelve un undefined) sale un alert con texto, si existe la cuenta pues mostrar datos en consola */}\r\n                            <Button variant='contained'\r\n                                    style={{marginTop: 10}}\r\n                                    onClick={() => {\r\n                                        if(!(text.username === ''||text.password === '')) {\r\n                                            fetch(`http://localhost:3030/login?user=${text.username}&password=${text.password}`)\r\n                                            .then(res => res.json())\r\n                                            .then(json => {\r\n                                                if(json.data.nombre!==undefined) {\r\n                                                    console.log(json)\r\n                                                    console.log(`nombre: ${json.data.nombre}`)\r\n                                                    console.log(`rol: ${json.data.rol}`)\r\n                                                    alert('datos obtenido esta en consola')\r\n                                                } else {\r\n                                                    alert('usuario o password incorrecto')\r\n                                                }\r\n                                            })\r\n                                        } else {\r\n                                            alert('campo vacio')\r\n                                        }\r\n                                    }}\r\n                            >Acceder</Button>\r\n                        </Box>\r\n                    </Paper>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </Container>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}